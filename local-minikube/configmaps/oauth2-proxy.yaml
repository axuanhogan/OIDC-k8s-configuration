apiVersion: v1
kind: ConfigMap
metadata:
  namespace: application
  name: oauth2-proxy
data:
  OAUTH2_PROXY_PROVIDER: keycloak-oidc
  OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
  OAUTH2_PROXY_CLIENT_ID: demo
  OAUTH2_PROXY_READY_PATH: /oauth2/ready
  OAUTH2_PROXY_EMAIL_DOMAINS: "*"
  OAUTH2_PROXY_CODE_CHALLENGE_METHOD: S256
  OAUTH2_PROXY_COOKIE_DOMAINS: .localhost
  OAUTH2_PROXY_COOKIE_EXPIRE: 72h
  OAUTH2_PROXY_COOKIE_REFRESH: 29m
  OAUTH2_PROXY_COOKIE_SECURE: "true"
  OAUTH2_PROXY_WHITELIST_DOMAINS: "*.localhost"
  OAUTH2_PROXY_OIDC_ISSUER_URL: http://sso.localhost/realms/demo
  OAUTH2_PROXY_REDIRECT_URL: http://backend-api.localhost/oauth2/callback
  OAUTH2_PROXY_REVERSE_PROXY: "true"
  OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: "true"
  OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
  OAUTH2_PROXY_UPSTREAMS: http://backend-api:8080
  OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: "true"
  OAUTH2_PROXY_FORCE_JSON_ERRORS: "true" # When Authenticate fails, no guide page will be created, but an empty json object will be returned instead.
  OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
  OAUTH2_PROXY_SKIP_AUTH_PREFLIGHT: "true" # No Authentication behavior is performed when receiving an OPTIONS request (this can solve the problem of CORS caused by Oauth2 Proxt replying 401 when Broswer makes a preflight request)
  OAUTH2_PROXY_REAL_CLIENT_IP_HEADER: "X-Forwarded-For" # Specify Oauth2 Proxy to identify Client IP through X-Forwarded-For header
  # OAUTH2_PROXY_TRUSTED_IPS: "127.0.0.1" # IP List trusted by Oauth2 Proxy. This option will allow this IP List to bypass the Authentication behavior of Oauth2 Proxy.
  OAUTH2_PROXY_SHOW_DEBUG_ON_ERROR: "true" # show detailed error information on error pages (WARNING: this may contain sensitive information - do not use in production)
